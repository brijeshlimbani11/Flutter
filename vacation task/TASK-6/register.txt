import 'dart:convert';
import 'package:email_validator/email_validator.dart';
import 'package:flutter/material.dart';
import 'package:fluttertoast/fluttertoast.dart';
import 'package:http/http.dart' as http;

import 'login.dart';

class register extends StatefulWidget {
  const register({Key? key}) : super(key: key);
  @override
  State<register> createState() => _registerState();
}

class _registerState extends State<register> {
  TextEditingController _username = TextEditingController();
  TextEditingController _email = TextEditingController();
  TextEditingController _password = TextEditingController();
  TextEditingController _phone_no = TextEditingController();
  final _formKey = GlobalKey<FormState>();

  @override
  Widget build(BuildContext context) {
    final size = MediaQuery.of(context).size;
    final width = size.width;
    final height = size.height;

    return Form(
      key: _formKey,
      child: Scaffold(
        body: Container(
          padding: EdgeInsets.all(35),
          decoration: BoxDecoration(
              gradient: LinearGradient(
                  begin: Alignment.topRight,
                  end: Alignment.bottomLeft,
                  colors: [
                Color.fromARGB(255, 69, 188, 89),
                Color.fromARGB(255, 247, 183, 5),
              ])),
          child: SafeArea(
            child: ListView(
              children: [
                SizedBox(
                  height: height * 0.10,
                ),
                Text(
                  'Register',
                  style: TextStyle(
                    fontSize: 40,
                    fontWeight: FontWeight.bold,
                    color: Colors.blue[900],
                  ),
                ),
                SizedBox(
                  height: height * 0.04,
                ),
                TextFormField(
                  controller: _username,
                  validator: (value) {
                    if (value == null || value.isEmpty) {
                      return 'required filed';
                    } else {
                      return null;
                    }
                  },
                  style: TextStyle(
                    color: Color.fromARGB(255, 255, 0, 0),
                    fontSize: 18,
                  ),
                  cursorColor: Color.fromARGB(255, 255, 0, 0),
                  decoration: InputDecoration(
                    prefixIcon: Icon(
                      Icons.supervised_user_circle,
                      color: Color.fromARGB(255, 255, 0, 0),
                    ),
                    labelText: 'Username',
                    labelStyle: TextStyle(
                        fontSize: 17, color: Color.fromARGB(255, 255, 0, 0)),
                    border: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(10),
                      borderSide:
                          BorderSide(color: Color.fromARGB(255, 255, 0, 0)),
                    ),
                    focusedBorder: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(10),
                      borderSide: BorderSide(
                          color: Color.fromARGB(255, 255, 0, 0), width: 2),
                    ),
                  ),
                ),
                SizedBox(
                  height: height * 0.02,
                ),
                TextFormField(
                  controller: _email,
                  validator: (value) {
                    if (value == null || value.isEmpty) {
                      return 'email can not be empty';
                    } else if (!EmailValidator.validate(value, true)) {
                      return 'invalid email address';
                    } else {
                      return null;
                    }
                  },
                  style: TextStyle(
                    color: Color.fromARGB(255, 255, 0, 0),
                    fontSize: 18,
                  ),
                  cursorColor: Color.fromARGB(255, 255, 0, 0),
                  decoration: InputDecoration(
                    prefixIcon: Icon(
                      Icons.email,
                      color: Color.fromARGB(255, 255, 0, 0),
                    ),
                    labelText: 'Email',
                    labelStyle: TextStyle(
                        fontSize: 17, color: Color.fromARGB(255, 255, 0, 0)),
                    border: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(10),
                      borderSide:
                          BorderSide(color: Color.fromARGB(255, 255, 0, 0)),
                    ),
                    focusedBorder: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(10),
                      borderSide: BorderSide(
                          color: Color.fromARGB(255, 255, 0, 0), width: 2),
                    ),
                  ),
                ),
                SizedBox(
                  height: height * 0.02,
                ),
                TextFormField(
                  controller: _password,
                  validator: (value) {
                    if (value == null || value.isEmpty) {
                      return 'password can not be empty';
                    } else if (value.length <= 8) {
                      return 'passwords must be longer than eight characters.';
                    }
                    return null;
                  },
                  obscureText: true,
                  style: TextStyle(
                    color: Color.fromARGB(255, 255, 0, 0),
                    fontSize: 18,
                  ),
                  cursorColor: Color.fromARGB(255, 255, 0, 0),
                  decoration: InputDecoration(
                    prefixIcon: Icon(
                      Icons.password,
                      color: Color.fromARGB(255, 255, 0, 0),
                    ),
                    labelText: 'Password',
                    labelStyle: TextStyle(
                        fontSize: 17, color: Color.fromARGB(255, 255, 0, 0)),
                    border: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(10),
                      borderSide:
                          BorderSide(color: Color.fromARGB(255, 255, 0, 0)),
                    ),
                    focusedBorder: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(10),
                      borderSide: BorderSide(
                          color: Color.fromARGB(255, 255, 0, 0), width: 2),
                    ),
                  ),
                ),
                SizedBox(
                  height: height * 0.02,
                ),
                TextFormField(
                  controller: _phone_no,
                  validator: (value) {
                    if (value?.length != 10) {
                      return 'length of number is 10 digits.';
                    }
                    return null;
                  },
                  keyboardType: TextInputType.number,
                  style: TextStyle(
                    color: Color.fromARGB(255, 255, 0, 0),
                    fontSize: 18,
                  ),
                  cursorColor: Color.fromARGB(255, 255, 0, 0),
                  decoration: InputDecoration(
                    prefixIcon: Icon(
                      Icons.mobile_friendly,
                      color: Color.fromARGB(255, 255, 0, 0),
                    ),
                    labelText: 'Mobile No',
                    labelStyle: TextStyle(
                        fontSize: 17, color: Color.fromARGB(255, 255, 0, 0)),
                    border: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(10),
                      borderSide:
                          BorderSide(color: Color.fromARGB(255, 255, 0, 0)),
                    ),
                    focusedBorder: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(10),
                      borderSide: BorderSide(
                          color: Color.fromARGB(255, 255, 0, 0), width: 2),
                    ),
                  ),
                ),
                SizedBox(
                  height: height * 0.02,
                ),
                Container(
                  alignment: Alignment.centerRight,
                  child: ElevatedButton(
                    onPressed: () {
                      _sendData();
                      // _getData();
                    },
                    child: Padding(
                      padding: EdgeInsets.only(
                          left: 40.0, right: 40.0, top: 13.0, bottom: 13.0),
                      child: Text(
                        'Send',
                        style: TextStyle(
                          fontSize: 19,
                        ),
                      ),
                    ),
                    style: ButtonStyle(
                      backgroundColor: MaterialStatePropertyAll<Color>(
                          Color.fromARGB(255, 38, 6, 126)),
                    ),
                  ),
                ),
                SizedBox(
                  height: height * 0.01,
                ),
                InkWell(
                  onTap: () {
                    Navigator.pop(context);
                  },
                  child: Container(
                    alignment: Alignment.centerRight,
                    child: Text(
                      'Already have an account? Sign In',
                      style: TextStyle(
                          color: Color.fromARGB(255, 0, 3, 8), fontSize: 15),
                    ),
                  ),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }

  Future<void> _sendData() async {
    if (_formKey.currentState!.validate()) {
      var url = Uri.parse('http://192.168.139.135/register_API/api/create.php');
      var response = await http.post(url, body: {
        'username': _username.text,
        'email': _email.text,
        'password': _password.text,
        'number': _phone_no.text
      });

      var jsonData = jsonDecode(response.body);
      if (jsonData == "success") {
        Fluttertoast.showToast(
            msg: "Your information has been recorded",
            toastLength: Toast.LENGTH_SHORT,
            gravity: ToastGravity.BOTTOM,
            timeInSecForIosWeb: 1,
            backgroundColor: Color.fromARGB(255, 23, 208, 35),
            textColor: Colors.black,
            fontSize: 16.0);

        Future.delayed(Duration(seconds: 2), () {
          _username.text = "";
          _email.text = "";
          _password.text = "";
          _phone_no.text = "";
          Navigator.push(
            context,
            MaterialPageRoute(
              builder: (context) => login(),
            ),
          );
        });
      } else {
        Fluttertoast.showToast(
            msg: "Something Wrong Please Try Again.",
            toastLength: Toast.LENGTH_SHORT,
            gravity: ToastGravity.BOTTOM,
            timeInSecForIosWeb: 1,
            backgroundColor: Color.fromARGB(255, 23, 208, 35),
            textColor: Colors.black,
            fontSize: 16.0);
      }
    }
  }
}
